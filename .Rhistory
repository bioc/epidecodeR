}
## Import DEG list
del<-read.table(deg, header = T, row.names = NULL, stringsAsFactors = F, sep = "\t", fill = T)
#del<-del[,1:3]
#colnames(del)<-c("ID", "Log2FC", "Pval")
if (! is.numeric(del[,2]) && ! is.numeric(del[,3])) {
message ("DEG list not in proper format!
Input should be three columns separated by tab with column 1 as id, column 2 as log2FC and column 3 as P value")
}
del<-na.omit(del)
del<-del[del[,3]<=pval,]
grp1<-del[del[,1] %notin% names(eventcounts),]
cdfdf<-data.frame(cdfPlot(distribution = "norm", param.list = list(mean=mean(grp1[,2]), sd=sd(grp1[,2])), plot.it = F), grp="0")
ecdfdf<-data.frame(ecdfPlot(grp1[,2], plot.it = F), grp="0")
grptables<-list("0"=grp1)
if (param == 1) {
grp2<-del[del[,1] %in% names(eventcounts[eventcounts>0]),]
if (dim(grp2)[1]>1) {
cdfdf<-rbind(cdfdf, data.frame(cdfPlot(distribution = "norm", param.list = list(mean=mean(grp2[,2]), sd=sd(grp2[,2])), plot.it = F), grp="1+"))
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp2[,2], plot.it = F), grp="1+"))
} else if (dim(grp2)[1]==1) {
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp2[,2], plot.it = F), grp="1+"))
} else {
message("No genes map to \"1+\" group!")
}
grptables[["1+"]]<-grp2
grpcounts=c("0"=length(grp1[,1]), "1+"=length(grp2[,1]))
}
if (param == 2) {
grp2name=paste0("1to", ints[2], sep = "")
grp2<-del[del[,1] %in% names(eventcounts[eventcounts>=1 & eventcounts<=ints[2]]),]
if (dim (grp2)[1]>1) {
cdfdf<-rbind(cdfdf, data.frame(cdfPlot(distribution = "norm", param.list = list(mean=mean(grp2[,2]), sd=sd(grp2[,2])), plot.it = F), grp=grp2name))
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp2[,2], plot.it = F), grp=grp2name))
} else if (dim(grp2)[1]==1) {
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp2[,2], plot.it = F), grp=grp2name))
} else {
message(paste ("No genes map to \"",grp2name,"\" group", sep = ""))
}
grp3name=paste0(ints[2]+1, "+", sep = "")
grp3<-del[del[,1] %in% names(eventcounts[eventcounts>ints[2]]),]
if (dim (grp3)[1]>1) {
cdfdf<-rbind(cdfdf, data.frame(cdfPlot(distribution = "norm", param.list = list(mean=mean(grp3[,2]), sd=sd(grp3[,2])), plot.it = F), grp=grp3name))
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp3[,2], plot.it = F), grp=grp3name))
} else if (dim(grp3)[1]==1) {
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp3[,2], plot.it = F), grp=grp3name))
} else {
message(paste ("No genes map to \"",grp3name,"\" group", sep=""))
}
#grptables[["1"]]<-grp2
grptables[[grp2name]]<-grp2
#grptables[["2+"]]<-grp3
grptables[[grp3name]]<-grp3
#grpcounts=c("0"=length(grp1[,1]), "1"=length(grp2[,1]), "2+"=length(grp3[,1]))
grpcounts=c(length(grp1[,1]), length(grp2[,1]), length(grp3[,1]))
names(grpcounts)<-names(grptables)
}
if (param == 3) {
grp2name="1"
grp2<-del[del[,1] %in% names(eventcounts[eventcounts==1]),]
if (dim (grp2)[1]>1) {
cdfdf<-rbind(cdfdf, data.frame(cdfPlot(distribution = "norm", param.list = list(mean=mean(grp2[,2]), sd=sd(grp2[,2])), plot.it = F), grp=grp2name))
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp2[,2], plot.it = F), grp=grp2name))
} else if (dim (grp2)[1]==1) {
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp2[,2], plot.it = F), grp=grp2name))
} else {
message("No genes map to \"1\" group")
}
grp3name=paste0("2to", ints[2], sep="")
grp3<-del[del[,1] %in% names(eventcounts[eventcounts>1 & eventcounts<=ints[2]]),]
if (dim (grp3)[1]>1) {
cdfdf<-rbind(cdfdf, data.frame(cdfPlot(distribution = "norm", param.list = list(mean=mean(grp3[,2]), sd=sd(grp3[,2])), plot.it = F), grp=grp3name))
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp3[,2], plot.it = F), grp=grp3name))
} else if (dim (grp3)[1]==1) {
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp3[,2], plot.it = F), grp=grp3name))
} else {
message (paste("No genes map to \"", grp3name, "\" group"))
}
grp4name=paste0(ints[2]+1, "+", sep="")
grp4<-del[del[,1] %in% names(eventcounts[eventcounts>ints[2]]),]
if (dim (grp4)[1]>1) {
cdfdf<-rbind(cdfdf, data.frame(cdfPlot(distribution = "norm", param.list = list(mean=mean(grp4[,2]), sd=sd(grp4[,2])), plot.it = F), grp=grp4name))
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp4[,2], plot.it = F), grp=grp4name))
} else if (dim(grp4)[1]==1) {
ecdfdf<-rbind(ecdfdf, data.frame(ecdfPlot(grp4[,2], plot.it = F), grp=grp4name))
} else {
message(paste("No genes map to \"", grp4name, "\" group"))
}
grptables[["1"]]<-grp2
grptables[[grp3name]]<-grp3
grptables[[grp4name]]<-grp4
grpcounts=c(length(grp1[,1]), length(grp2[,1]), length(grp3[,1]), length(grp4[,1]))
names(grpcounts)<-names(grptables)
}
#test<-data.frame(aov(Order.Statistics~grp, data = ecdfdf) %>% tukey_hsd())
ktest<-ecdfdf %>% kruskal_test(Order.Statistics~grp)
if (ktest$p<0.05) {
test<-data.frame(dunn_test(Order.Statistics~grp, data = ecdfdf, p.adjust.method = "bonferroni"))
}
else {
test<-data.frame(dunn_test(Order.Statistics~grp, data = ecdfdf, p.adjust.method = "bonferroni"))
message("Nothing significant!")
}
setClass("epidecodeR", slots=list(t="data.frame", e="data.frame", eventcounts="numeric", grptables="list", grpcounts="integer",sign.test="data.frame"))
ro<-new("epidecodeR", t=cdfdf, e=ecdfdf, eventcounts=eventcounts, grptables=grptables, grpcounts=grpcounts, sign.test=test)
return(ro)
}
plottingfunc<-function (objdf, title, lim, xlab, ylab) {
p<-ggplot(objdf) +
ggtitle(title) +
geom_vline(xintercept = 0, color="grey", alpha=0.5, linetype="dashed") +
geom_hline(yintercept = 0.5, color="grey", alpha=0.5, linetype="dashed") +
xlab(xlab) +
ylab(ylab) +
xlim(lim) +
ylim(0,1) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
return(p)
}
makeplot<-function (anobj, type, lim, title, xlab, ylab) {
if (missing(anobj)) {
message ("No epidecodeR object provided!")
}
if (missing(type)) {
type="both"
}
if (missing(lim)) {
lim=c(-1,1)
}
if (missing(title)) {
title=""
}
if (missing(xlab)) {
xlab="Log2FC"
}
if (missing(ylab)) {
ylab="Cumulative Probabilities"
}
pt<-plottingfunc(objdf=anobj@t, title=title, lim=lim, xlab=xlab, ylab=ylab)
pe<-plottingfunc(objdf=anobj@e, title=title, lim=lim, xlab=xlab, ylab=ylab)
pb<-plottingfunc(objdf = NULL, title=title, lim=lim, xlab=xlab, ylab=ylab)
for (i in 1:length(anobj@grpcounts)) {
if (anobj@grpcounts[i]==0) {
pt<-pt+geom_blank(data=data.frame(cdfPlot(distribution = "norm", param.list = list(mean=0, sd=1), plot.it = F),
grp=names(anobj@grpcounts[i])), aes(Quantiles, Cumulative.Probabilities, group=grp, color=grp))
pe<-pe+geom_blank(data=data.frame(cdfPlot(distribution = "norm", param.list = list(mean=0, sd=1), plot.it = F),
grp=names(anobj@grpcounts[i])), aes(Quantiles, Cumulative.Probabilities, group=grp, color=grp))
pb<-pb+geom_blank(data=data.frame(cdfPlot(distribution = "norm", param.list = list(mean=0, sd=1), plot.it = F),
grp=names(anobj@grpcounts[i])), aes(Quantiles, Cumulative.Probabilities, group=grp, color=grp))
} else if (anobj@grpcounts[i]==1) {
message(paste("Theoretical plot for ", names(anobj@grpcounts[i]), " group not included since only one gene found to belong to the group!", sep = ""))
}
}
pt<-pt+geom_line(aes(Quantiles, Cumulative.Probabilities, group=grp, color=grp))
pt<-pt+scale_color_discrete(name="Groups (genes)", breaks=names(anobj@grpcounts),
labels=paste(names(anobj@grpcounts)," (",anobj@grpcounts,")", sep = "" ), drop=FALSE)
pe<-pe+geom_point(aes(Order.Statistics, Cumulative.Probabilities, group=grp, color=grp), size=1) +
geom_line(aes(Order.Statistics, Cumulative.Probabilities, group=grp, color=grp))
pe<-pe+scale_color_discrete(name="Groups (genes)", breaks=names(anobj@grpcounts),
labels=paste(names(anobj@grpcounts)," (",anobj@grpcounts,")", sep = "" ), drop=FALSE)
pb<-pb+geom_line(data=anobj@t, aes(Quantiles, Cumulative.Probabilities, group=grp, color=grp))
pb<-pb+geom_point(data=anobj@e, aes(Order.Statistics, Cumulative.Probabilities, group=grp, color=grp),size=1) +
geom_line(data=anobj@e, aes(Order.Statistics, Cumulative.Probabilities, group=grp, color=grp), linetype="dashed")
pb<-pb+scale_color_discrete(name="Groups (genes)", breaks=names(anobj@grpcounts),
labels=paste(names(anobj@grpcounts)," (",anobj@grpcounts,")", sep = "" ), drop=FALSE)
if (type == "t") {
p<-pt
} else if (type == "e") {
p<-pe
} else if (type == "both") {
p<-pb
}
return(p)
}
plot.test<-function (obj, title, ylab) {
if (missing(title) || is.null(title)) {
title = ""
}
if (missing(ylab) || is.null(ylab)) {
ylab="Log2FoldChange"
}
bplot<-ggplot()+
ggtitle(title) +
xlab("Groups") +
ylab(ylab) +
theme_classic()
over<-NULL
for (i in 1:length(obj@grpcounts)) {
if (obj@grpcounts[i]==0) {
bplot<-bplot+geom_blank(data=data.frame(x=rnorm(100), grp=names(obj@grpcounts[i])), aes(grp, x, group=grp, color=grp))
} else {
bplot<-bplot+geom_boxplot(data=(subset(obj@e, obj@e$grp %in% names(obj@grpcounts[i]))), aes(grp, Order.Statistics, group=grp, color=grp),
width=0.4)
}
}
#for (i in 1:dim(obj@sign.test)[1]) {
#  over[i]=max(obj@e$Order.Statistics)+2*i
#}
if (length (unique(obj@sign.test$p.adj.signif))==1 && unique(obj@sign.test$p.adj.signif)=="ns") {
bplot<-bplot +
scale_color_discrete(name="Groups (genes)", breaks=names(obj@grpcounts),
labels=paste(names(obj@grpcounts)," (",obj@grpcounts,")", sep = "" ), drop=FALSE) +
theme(plot.title = element_text(hjust = 0.5),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
} else {
bplot<-bplot +
scale_color_discrete(name="Groups (genes)", breaks=names(obj@grpcounts),
labels=paste(names(obj@grpcounts)," (",obj@grpcounts,")", sep = "" ), drop=FALSE) +
stat_pvalue_manual(obj@sign.test, hide.ns = T, label = "p.adj", y.position = max(obj@e$Order.Statistics)*1.2, step.increase = 0.2) +
theme(plot.title = element_text(hjust = 0.5),
axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
}
return(bplot)
}
out<-epidecodeR(events = "ENCFF912ZTV.A549.H3K27me3ChIPSeq.bed", deg = "siSDS3.txt", gtf_file = "hg38.gtf.gz", id_type = "gene_name",
param = 3, boundaries = 2000)
out@sign.test
out<-epidecodeR(events = "ENCFF155GOT.A549.H3K9me3ChIPSeq.bed", deg = "siSDS3.txt", gtf_file = "hg38.gtf.gz", id_type = "gene_name",
param = 3, boundaries = 2000)
out@sign.test
p8<-makeplot(out, lim = c(-2,2), title = "H3K9me3", xlab = "siSDS3/WT")
pt8<-plot.test(out, title = "H3K9me3", ylab = "siSDS3/WT")
p8
pt
pt8
out<-epidecodeR(events = "ENCFF697WAE.A549.H3K27acChIPSeq.bed", deg = "siFAM60A.txt", gtf_file = "hg38.gtf.gz", id_type = "gene_name",
param = 3, boundaries = 2000)
p1<-makeplot(out, lim = c(-2,2), title = "H3K27ac", xlab = "siFAM60A/WT")
pt1<-plot.test(out, title = "H3K27ac", ylab = "siFAM60A/WT")
p1
pt1
out<-epidecodeR(events = "ENCFF697WAE.A549.H3K27acChIPSeq.bed", deg = "siSDS3.txt", gtf_file = "hg38.gtf.gz", id_type = "gene_name",
param = 3, boundaries = 2000)
p2<-makeplot(out, lim = c(-2,2), title = "H3K27ac", xlab = "siSDS3/WT")
pt2<-plot.test(out, title = "H3K27ac", ylab = "siSDS3/WT")
out<-epidecodeR(events = "ENCFF106UEP.A549.H3K9acChIPSeq.bed", deg = "siFAM60A.txt", gtf_file = "hg38.gtf.gz", id_type = "gene_name",
param = 3, boundaries = 2000)
p3<-makeplot(out, lim = c(-2,2), title = "H3K9ac", xlab = "siFAM60A/WT")
pt3<-plot.test(out, title = "H3K9ac", ylab = "siFAM60A/WT")
out<-epidecodeR(events = "ENCFF106UEP.A549.H3K9acChIPSeq.bed", deg = "siSDS3.txt", gtf_file = "hg38.gtf.gz", id_type = "gene_name",
param = 3, boundaries = 2000)
p4<-makeplot(out, lim = c(-2,2), title = "H3K9ac", xlab = "siSDS3/WT")
pt4<-plot.test(out, title = "H3K9ac", ylab = "siSDS3/WT")
out<-epidecodeR(events = "ENCFF912ZTV.A549.H3K27me3ChIPSeq.bed", deg = "siFAM60A.txt", gtf_file = "hg38.gtf.gz", id_type = "gene_name",
param = 3, boundaries = 2000)
p5<-makeplot(out, lim = c(-2,2), title = "H3K27me3", xlab = "siFAM60A/WT")
pt5<-plot.test(out, title = "H3K27me3", ylab = "siFAM60A/WT")
out<-epidecodeR(events = "ENCFF912ZTV.A549.H3K27me3ChIPSeq.bed", deg = "siSDS3.txt", gtf_file = "hg38.gtf.gz", id_type = "gene_name",
param = 3, boundaries = 2000)
p6<-makeplot(out, lim = c(-2,2), title = "H3K27me3", xlab = "siSDS3/WT")
pt6<-plot.test(out, title = "H3K27me3", ylab = "siSDS3/WT")
out<-epidecodeR(events = "ENCFF155GOT.A549.H3K9me3ChIPSeq.bed", deg = "siFAM60A.txt", gtf_file = "hg38.gtf.gz", id_type = "gene_name",
param = 3, boundaries = 2000)
p7<-makeplot(out, lim = c(-2,2), title = "H3K9me3", xlab = "siFAM60A/WT")
pt7<-plot.test(out, title = "H3K9me3", ylab = "siFAM60A/WT")
out<-epidecodeR(events = "ENCFF155GOT.A549.H3K9me3ChIPSeq.bed", deg = "siSDS3.txt", gtf_file = "hg38.gtf.gz", id_type = "gene_name",
param = 3, boundaries = 2000)
p8<-makeplot(out, lim = c(-2,2), title = "H3K9me3", xlab = "siSDS3/WT")
pt8<-plot.test(out, title = "H3K9me3", ylab = "siSDS3/WT")
library(cowplot)
pg1<-plot_grid(p1,
pt1,
p3,
pt3,
p5,
pt5,
p7,
pt7, ncol = 2, labels = "AUTO", label_size = 12)
pg2<-plot_grid(p2,
pt2,
p4,
pt4,
p6,
pt6,
p8,
pt8, ncol = 2, labels = "AUTO", label_size = 12)
legend<-get_legend(p1 + theme(legend.box.margin = margin(0, 0, 0, 12)))
plot_grid(pg1, rel_widths=c(3, .4))
plot_grid(pg2, rel_widths=c(3, .4))
?dunn_test
out@sign.test
tukey_hsd()
?tukey_hsd
png("Ac_plotgrid.png", res = 300, width = 4000, height=6000)
plot_grid(pg1, rel_widths=c(3, .4))
dev.off()
png("me_plotgrid.png", res = 300, width = 4000, height=6000)
plot_grid(pg2, rel_widths=c(3, .4))
dev.off()
out<-epidecodeR(events = "con_peak.bed", deg = "CS1.de.txt", param = 3)
p1<-makeplot(out, lim=c(-7,7))
pt1<-plot.test(out)
out<-epidecodeR(events = "con_peak.bed", deg = "CS2.de.txt", param = 3)
p2<-makeplot(out, lim=c(-7,7))
pt2<-plot.test(out)
pg<-plot_grid(p1, pt1, p2, pt2, ncol = 2, labels = "AUTO", label_size = 12)
pg
png("FTOi_grid.png", res = 300, width = 3000, height = 3000)
pg
dev.off()
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF1.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p6<-makeplot(out, lim = c(-10,10), title = "Ythdf1-KO RNA-seq differential gene expression")
pt6<-plot.test(out, title = "Ythdf1-KO RNA-seq differential gene expression")
setwd("~/data/epidecodeR/validate")
setwd("~/data/epidecoder/validate")
setwd("~/data/epidecodeR/validation")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF1.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p6<-makeplot(out, lim = c(-10,10), title = "Ythdf1-KO RNA-seq differential gene expression")
pt6<-plot.test(out, title = "Ythdf1-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF2.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p7<-makeplot(out, lim = c(-10,10), title = "Ythdf2-KO RNA-seq differential gene expression")
pt7<-plot.test(out, title = "Ythdf2-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF3.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p8<-makeplot(out, lim = c(-10,10), title = "Ythdf3-KO RNA-seq differential gene expression")
pt8<-plot.test(out, title = "Ythdf3-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_triple.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p9<-makeplot(out, lim = c(-10,10), title = "Triple-KO RNA-seq differential gene expression")
pt9<-plot.test(out, title = "Triple-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_Mettl3.tsv", gtf_file = "../mm10.gtf.gz", pval = 1, id_type = "merge", param = 3)
p10<-makeplot(out, lim = c(-10,10), title = "Mettl3-KO RNA-seq differential gene expression")
pt10<-plot.test(out, title = "Mettl3-KO RNA-seq differential gene expression")
pg2<-plot_grid(p9,
pt9,
p10,
pt10, ncol = 2, labels = "AUTO", label_size = 12)
pg3<-plot_grid(p6,
pt6,
p7,
pt7,
p8,
pt8, ncol = 2, labels = "AUTO", label_size = 12)
plot_grid(pg1, rel_widths=c(3, .4))
plot_grid(pg2, rel_widths=c(3, .4))
plot_grid(pg3, rel_widths=c(3, .4))
plot_grid(pg2, rel_widths=c(3, .4))
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF1.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 2)
p6<-makeplot(out, lim = c(-10,10), title = "Ythdf1-KO RNA-seq differential gene expression")
pt6<-plot.test(out, title = "Ythdf1-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF2.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 2)
p7<-makeplot(out, lim = c(-10,10), title = "Ythdf2-KO RNA-seq differential gene expression")
pt7<-plot.test(out, title = "Ythdf2-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF3.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 2)
p8<-makeplot(out, lim = c(-10,10), title = "Ythdf3-KO RNA-seq differential gene expression")
pt8<-plot.test(out, title = "Ythdf3-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_triple.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 2)
p9<-makeplot(out, lim = c(-10,10), title = "Triple-KO RNA-seq differential gene expression")
pt9<-plot.test(out, title = "Triple-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_Mettl3.tsv", gtf_file = "../mm10.gtf.gz", pval = 1, id_type = "merge", param = 2)
p10<-makeplot(out, lim = c(-10,10), title = "Mettl3-KO RNA-seq differential gene expression")
pt10<-plot.test(out, title = "Mettl3-KO RNA-seq differential gene expression")
pg2<-plot_grid(p9,
pt9,
p10,
pt10, ncol = 2, labels = "AUTO", label_size = 12)
pg2
pg3<-plot_grid(p6,
pt6,
p7,
pt7,
p8,
pt8, ncol = 2, labels = "AUTO", label_size = 12)
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF1.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p6<-makeplot(out, lim = c(-10,10), title = "Ythdf1-KO RNA-seq differential gene expression")
pt6<-plot.test(out, title = "Ythdf1-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF2.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p7<-makeplot(out, lim = c(-10,10), title = "Ythdf2-KO RNA-seq differential gene expression")
pt7<-plot.test(out, title = "Ythdf2-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF3.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p8<-makeplot(out, lim = c(-10,10), title = "Ythdf3-KO RNA-seq differential gene expression")
pt8<-plot.test(out, title = "Ythdf3-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_triple.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p9<-makeplot(out, lim = c(-10,10), title = "Triple-KO RNA-seq differential gene expression")
pt9<-plot.test(out, title = "Triple-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_Mettl3.tsv", gtf_file = "../mm10.gtf.gz", pval = 1, id_type = "merge", param = 3)
p10<-makeplot(out, lim = c(-10,10), title = "Mettl3-KO RNA-seq differential gene expression")
pt10<-plot.test(out, title = "Mettl3-KO RNA-seq differential gene expression")
pg2<-plot_grid(p9,
pt9,
p10,
pt10, ncol = 2, labels = "AUTO", label_size = 12)
pg3<-plot_grid(p6,
pt6,
p7,
pt7,
p8,
pt8, ncol = 2, labels = "AUTO", label_size = 12)
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_Mettl3.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p10<-makeplot(out, lim = c(-10,10), title = "Mettl3-KO RNA-seq differential gene expression")
pt10<-plot.test(out, title = "Mettl3-KO RNA-seq differential gene expression")
p10
pt10
pg2<-plot_grid(p9,
pt9,
p10,
pt10, ncol = 2, labels = "AUTO", label_size = 12)
pg3<-plot_grid(p6,
pt6,
p7,
pt7,
p8,
pt8, ncol = 2, labels = "AUTO", label_size = 12)
png("RNAseqDE_main_plotgrid.png", res = 300, width = 4000, height=4000)
plot_grid(pg2, rel_widths=c(3, .4))
dev.off()
png("RNAseqDE_suppl_plotgrid.png", res = 300, width = 4000, height=6000)
plot_grid(pg3, rel_widths=c(3, .4))
dev.off()
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF1.tsv", gtf_file = "../mm10.gtf.gz", pval = 1, id_type = "merge", param = 3)
p6<-makeplot(out, lim = c(-10,10), title = "Ythdf1-KO RNA-seq differential gene expression")
pt6<-plot.test(out, title = "Ythdf1-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF2.tsv", gtf_file = "../mm10.gtf.gz", pval = 1, id_type = "merge", param = 3)
p7<-makeplot(out, lim = c(-10,10), title = "Ythdf2-KO RNA-seq differential gene expression")
pt7<-plot.test(out, title = "Ythdf2-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF3.tsv", gtf_file = "../mm10.gtf.gz", pval = 1, id_type = "merge", param = 3)
p8<-makeplot(out, lim = c(-10,10), title = "Ythdf3-KO RNA-seq differential gene expression")
pt8<-plot.test(out, title = "Ythdf3-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_triple.tsv", gtf_file = "../mm10.gtf.gz", pval = 1, id_type = "merge", param = 3)
p9<-makeplot(out, lim = c(-10,10), title = "Triple-KO RNA-seq differential gene expression")
pt9<-plot.test(out, title = "Triple-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_Mettl3.tsv", gtf_file = "../mm10.gtf.gz", pval = 1, id_type = "merge", param = 3)
p10<-makeplot(out, lim = c(-10,10), title = "Mettl3-KO RNA-seq differential gene expression")
pt10<-plot.test(out, title = "Mettl3-KO RNA-seq differential gene expression")
pg2<-plot_grid(p9,
pt9,
p10,
pt10, ncol = 2, labels = "AUTO", label_size = 12)
pg3<-plot_grid(p6,
pt6,
p7,
pt7,
p8,
pt8, ncol = 2, labels = "AUTO", label_size = 12)
plot_grid(pg2, rel_widths=c(3, .4))
pg3
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF1.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p6<-makeplot(out, lim = c(-10,10), title = "Ythdf1-KO RNA-seq differential gene expression")
pt6<-plot.test(out, title = "Ythdf1-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF2.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p7<-makeplot(out, lim = c(-10,10), title = "Ythdf2-KO RNA-seq differential gene expression")
pt7<-plot.test(out, title = "Ythdf2-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF3.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p8<-makeplot(out, lim = c(-10,10), title = "Ythdf3-KO RNA-seq differential gene expression")
pt8<-plot.test(out, title = "Ythdf3-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_triple.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p9<-makeplot(out, lim = c(-10,10), title = "Triple-KO RNA-seq differential gene expression")
pt9<-plot.test(out, title = "Triple-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_Mettl3.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 3)
p10<-makeplot(out, lim = c(-10,10), title = "Mettl3-KO RNA-seq differential gene expression")
pt10<-plot.test(out, title = "Mettl3-KO RNA-seq differential gene expression")
pg2<-plot_grid(p9,
pt9,
p10,
pt10, ncol = 2, labels = "AUTO", label_size = 12)
pg3<-plot_grid(p6,
pt6,
p7,
pt7,
p8,
pt8, ncol = 2, labels = "AUTO", label_size = 12)
pg2
pg3
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_triple.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 2,  ints=c(1,3))
p9<-makeplot(out, lim = c(-10,10), title = "Triple-KO RNA-seq differential gene expression")
pt9<-plot.test(out, title = "Triple-KO RNA-seq differential gene expression")
p9
pt9
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_Mettl3.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 2,  ints=c(1,3))
p10<-makeplot(out, lim = c(-10,10), title = "Mettl3-KO RNA-seq differential gene expression")
pt10<-plot.test(out, title = "Mettl3-KO RNA-seq differential gene expression")
pt10
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF1.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 2,  ints=c(1,3))
p6<-makeplot(out, lim = c(-10,10), title = "Ythdf1-KO RNA-seq differential gene expression")
pt6<-plot.test(out, title = "Ythdf1-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF2.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 2,  ints=c(1,3))
p7<-makeplot(out, lim = c(-10,10), title = "Ythdf2-KO RNA-seq differential gene expression")
pt7<-plot.test(out, title = "Ythdf2-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_DF3.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 2,  ints=c(1,3))
p8<-makeplot(out, lim = c(-10,10), title = "Ythdf3-KO RNA-seq differential gene expression")
pt8<-plot.test(out, title = "Ythdf3-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_triple.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 2,  ints=c(1,3))
p9<-makeplot(out, lim = c(-10,10), title = "Triple-KO RNA-seq differential gene expression")
pt9<-plot.test(out, title = "Triple-KO RNA-seq differential gene expression")
out<-epidecodeR(events = "riboseq/mESC_WT_peak.bed", deg = "riboseq/DE_Mettl3.tsv", gtf_file = "../mm10.gtf.gz", id_type = "merge", param = 2,  ints=c(1,3))
p10<-makeplot(out, lim = c(-10,10), title = "Mettl3-KO RNA-seq differential gene expression")
pt10<-plot.test(out, title = "Mettl3-KO RNA-seq differential gene expression")
pg2<-plot_grid(p9,
pt9,
p10,
pt10, ncol = 2, labels = "AUTO", label_size = 12)
pg3<-plot_grid(p6,
pt6,
p7,
pt7,
p8,
pt8, ncol = 2, labels = "AUTO", label_size = 12)
plot_grid(pg1, rel_widths=c(3, .4))
plot_grid(pg2, rel_widths=c(3, .4))
plot_grid(pg3, rel_widths=c(3, .4))
png("RNAseqDE_main_plotgrid.png", res = 300, width = 4000, height=4000)
plot_grid(pg2, rel_widths=c(3, .4))
dev.off()
png("RNAseqDE_suppl_plotgrid.png", res = 300, width = 4000, height=6000)
plot_grid(pg3, rel_widths=c(3, .4))
dev.off()
library(BiocCheck)
BiocCheck()
setwd("~/epidecodeR")
BiocCheck()
library(epidecodeR)
